generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Plant {
  id              Int             @id @default(autoincrement())
  name            String
  species         String?
  imageUrl        String?         @db.LongText
  lastWatered     DateTime?
  stage           PlantStage      @default(SEED)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  userId          String
  isHarvested     Boolean         @default(false)
  harvestedAmount Float?
  seedDate        DateTime?
  seedlingDate    DateTime?
  vegetativeDate  DateTime?
  floweringDate   DateTime?
  ripeningDate    DateTime?
  user            User            @relation(fields: [userId], references: [id])
  images          PlantImage[]
  protocolEntries ProtocolEntry[]

  @@index([userId])
}

model PlantImage {
  id           Int      @id @default(autoincrement())
  imageUrl     String   @db.LongText
  plantId      Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  thumbnailUrl String   @default("/images/default-thumbnail.jpg") @db.LongText
  height       Int?
  width        Int?
  plant        Plant    @relation(fields: [plantId], references: [id])

  @@index([plantId])
}

model ProtocolEntry {
  id          Int      @id @default(autoincrement())
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  plantId     Int
  plant       Plant    @relation(fields: [plantId], references: [id])

  @@index([plantId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  name      String?
  email     String?   @unique
  password  String
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  plants    Plant[]
  sessions  Session[]
}

enum PlantStage {
  SEED
  SEEDLING
  VEGETATIVE
  FLOWERING
  RIPENING
  HARVESTED
}